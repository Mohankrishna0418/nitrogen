// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customers {
  id          String   @id @default(uuid())
  name        String
  email       String   @unique
  phoneNumber String   @unique
  address     String
  Orders      Orders[]
}

model Resturants {
  id        String      @id @default(uuid())
  name      String      @unique
  location  String
  menuitems MenuItems[]
  Orders    Orders[]
}

model MenuItems {
  id          String       @id @default(uuid())
  resturants  Resturants   @relation(fields: [resturentId], references: [id])
  resturentId String
  name        String
  price       Decimal
  isAvailable Boolean      @default(true)
  orderitems  OrderItems[]
}

model Orders {
  id          String       @id @default(uuid())
  customers   Customers    @relation(fields: [customerId], references: [id])
  customerId  String
  resturants  Resturants   @relation(fields: [resturentId], references: [id])
  resturentId String
  status      OrderStatus  @default(PLACED)
  totalPrice  Decimal
  orderTime   DateTime     @default(now())
  orderitems  OrderItems[]
}

model OrderItems {
  id         String    @id
  order      Orders    @relation(fields: [orderId], references: [id])
  orderId    String
  menuItem   MenuItems @relation(fields: [menuItemId], references: [id])
  menuItemId String
  quantity   Int
}

enum OrderStatus {
  PLACED
  PREPARING
  COMPLETED
  CANCELLED
}
